server:
  port: ${PORT:8083}

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:investment_db}
    username: ${DB_USER:accounts_ms}
    password: ${DB_PASS:super_segura}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate   # en prod nunca 'update'

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 5
      properties:
        spring.json.add.type.headers: false
        spring.json.trusted.packages: "com.investment.*"
        enable.idempotence: true
    consumer:
      group-id: ${KAFKA_GROUP:accounts-ms}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.investment.*"
      auto-offset-reset: earliest

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWK_SET_URI:http://localhost:8080/realms/investment/protocol/openid-connect/certs}

app:
  kafka:
    topics:
      tradeExecuted: ${TOPIC_TRADE_EXECUTED:trades-trades-executed}
      positionsRecalculateRequested: ${TOPIC_POSITIONS_RECALC_REQUESTED:positions-recalculate-requested}

logging:
  level:
    org.hibernate.SQL: warn